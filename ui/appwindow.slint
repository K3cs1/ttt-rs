import { Button, VerticalBox } from "std-widgets.slint";

struct TileData {
    id: int,
    win_color: brush,
    player_clicked: bool,
    computer_clicked: bool,
    empty: bool
}
component TicTacToeTile inherits Rectangle {
    in property <int> id;
    in property <image> player_icon;
    in property <image> computer_icon;
    in-out property <bool> player_clicked;
    in-out property <bool> computer_clicked;
    in-out property <bool> empty;
    in-out property <brush> win_color;

    callback player_selected(int);

    Rectangle {
        background: root.win_color;
        Image {
            visible: root.player_clicked;
            source: root.player_icon;
            width: parent.width - 16px;
            height: parent.height - 16px;
            x: parent.x;
            y: parent.y;
        }
        Image {
            visible: root.computer_clicked;
            source: root.computer_icon;
            width: parent.width - 16px;
            height: parent.height - 16px;
            x: parent.x;
            y: parent.y;
        }
        TouchArea {
            clicked => {
                root.player_selected(id);
            }
            width: 100%;
            height: 100%;
        }
    }
}

export component AppWindow inherits Window {
    private property <length> tile-size: 100px;
    private property <length> tile-spacing: 10px;
    private property <int> row-count: 3;
    private property <int> column-count: 3;
    private property <image> player_icon: @image-url("icons/x.png");
    private property <image> computer_icon: @image-url("icons/o.png");

    callback computer_turn(int);

    width: (root.column-count * root.tile-size) + ((root.column-count + 1) * root.tile-spacing);
    height: (root.row-count * root.tile-size) + ((root.row-count + 1) * root.tile-spacing);
    title: "Tic-Tac-Toe Game";

    in-out property <[TileData]> ttt_tiles : [
        {
            id: 0,
            win_color: Colors.yellow,
            player_clicked: false,
            computer_clicked: false,
            empty: true
        },
        {
            id: 1,
            win_color: Colors.yellow,
            user_clicked: false,
            computer_clicked: false,
            empty: true
        },
        {
            id: 2,
            win_color: Colors.yellow,
            player_clicked: false,
            computer_clicked: false,
            empty: true
        },
        {
            id: 3,
            win_color: Colors.yellow,
            player_clicked: false,
            computer_clicked: false,
            empty: true
        },
        {
            id: 4,
            win_color: Colors.yellow,
            player_clicked: false,
            computer_clicked: false,
            empty: true    
        },
        {
            id: 5,
            win_color: Colors.yellow,
            player_clicked: false,
            computer_clicked: false,
            empty: true
        },
        { 
            id: 6,
            win_color: Colors.yellow,
            player_clicked: false,
            computer_clicked: false,
            empty: true
        },
        {
            id: 7,
            win_color: Colors.yellow,
            player_clicked: false,
            computer_clicked: false,
            empty: true
        },
        {
            id: 8,
            win_color: Colors.yellow,
            player_clicked: false,
            computer_clicked: false,
            empty: true
        }
    ];

    for tile[i] in ttt_tiles : TicTacToeTile {
        player_selected(id) => {
            computer_turn(id);
        }
        id: i;
        x: root.tile-spacing + mod(i, root.column-count) * (root.tile-size + root.tile-spacing);
        y: root.tile-spacing + floor(i / root.row-count) * (root.tile-size + root.tile-spacing);
        width: root.tile-size;
        height: root.tile-size;
        player_icon: root.player-icon;
        computer_icon: root.computer-icon;

        player_clicked: tile.player-clicked;
        computer_clicked: tile.computer_clicked;
        empty: tile.empty;
        win_color: tile.win-color;
    }

}


